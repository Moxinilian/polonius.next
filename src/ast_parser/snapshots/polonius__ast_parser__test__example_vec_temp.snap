---
source: src/ast_parser/test.rs
expression: expect_parse(program)

---
Program {
    struct_decls: [],
    fn_prototypes: [],
    variables: [
        VariableDecl {
            name: "x",
            ty: I32,
        },
        VariableDecl {
            name: "v",
            ty: Struct {
                name: "Vec",
                parameters: [
                    Ty(
                        RefMut {
                            origin: "'v",
                            ty: I32,
                        },
                    ),
                ],
            },
        },
        VariableDecl {
            name: "p",
            ty: Ref {
                origin: "'p",
                ty: I32,
            },
        },
        VariableDecl {
            name: "tmp",
            ty: RefMut {
                origin: "'tmp0",
                ty: Struct {
                    name: "Vec",
                    parameters: [
                        Ty(
                            RefMut {
                                origin: "'tmp1",
                                ty: I32,
                            },
                        ),
                    ],
                },
            },
        },
    ],
    basic_blocks: [
        BasicBlock {
            name: "bb0",
            statements: [
                Spanned {
                    span: Span {
                        start: 155,
                        end: 162,
                    },
                    inner: Assign(
                        Place {
                            base: "x",
                            projections: [],
                        },
                        Number {
                            value: 22,
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 175,
                        end: 189,
                    },
                    inner: Assign(
                        Place {
                            base: "v",
                            projections: [],
                        },
                        Call {
                            name: "Vec_new",
                            arguments: [],
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 202,
                        end: 214,
                    },
                    inner: Assign(
                        Place {
                            base: "p",
                            projections: [],
                        },
                        Access {
                            kind: Borrow(
                                "'L_x",
                            ),
                            place: Place {
                                base: "x",
                                projections: [],
                            },
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 227,
                        end: 245,
                    },
                    inner: Assign(
                        Place {
                            base: "tmp",
                            projections: [],
                        },
                        Access {
                            kind: BorrowMut(
                                "'L_v",
                            ),
                            place: Place {
                                base: "v",
                                projections: [],
                            },
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 258,
                        end: 285,
                    },
                    inner: Expr(
                        Call {
                            name: "Vec_push",
                            arguments: [
                                Access {
                                    kind: Move,
                                    place: Place {
                                        base: "tmp",
                                        projections: [],
                                    },
                                },
                                Access {
                                    kind: Move,
                                    place: Place {
                                        base: "p",
                                        projections: [],
                                    },
                                },
                            ],
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 298,
                        end: 305,
                    },
                    inner: Assign(
                        Place {
                            base: "x",
                            projections: [],
                        },
                        Number {
                            value: 44,
                        },
                    ),
                },
                Spanned {
                    span: Span {
                        start: 318,
                        end: 334,
                    },
                    inner: Expr(
                        Call {
                            name: "Vec_len",
                            arguments: [
                                Access {
                                    kind: Copy,
                                    place: Place {
                                        base: "v",
                                        projections: [],
                                    },
                                },
                            ],
                        },
                    ),
                },
            ],
            successors: [],
        },
    ],
}
